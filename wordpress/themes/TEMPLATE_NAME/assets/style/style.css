@charset "UTF-8";
/* „É™„Ç≠„ÉÉ„Éâ„É¨„Ç§„Ç¢„Ç¶„ÉàÂØæÂøú */
body {
  font-family: "Noto Sans JP", sans-serif;
}

[data-device=pc] {
  display: none !important;
}
@media screen and (min-width: 768px) {
  [data-device=pc] {
    display: block !important;
  }
}

@media screen and (min-width: 768px) {
  [data-device=sp] {
    display: none !important;
  }
}

html {
  font-size: 16px;
}
@media (max-width: 375px) {
  html {
    font-size: 4.2666666667vw;
  }
}
@media screen and (min-width: 768px) {
  html {
    font-size: 1.4814814815vw;
  }
}
@media (min-width: 1080px) {
  html {
    font-size: 16px;
  }
}

a[href^=tel] {
  text-decoration: none;
}

a {
  color: inherit;
}

a:hover {
  text-decoration: none;
}

img,
svg {
  vertical-align: middle;
}

img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

*,
::before,
::after {
  --clamp-root-font-size: 16;
  --clamp-slope: calc((var(--clamp-max) - var(--clamp-min)) / (var(--clamp-viewport-max) - var(--clamp-viewport-min)));
  --clamp-y-axis-intersection: calc(var(--clamp-min) - (var(--clamp-slope) * var(--clamp-viewport-min)));
  --clamp-preffered-value: calc(
    var(--clamp-y-axis-intersection) * (1rem / var(--clamp-root-font-size)) + (var(--clamp-slope) * 100vi)
  );
  --clamp: clamp(
    calc(var(--clamp-min) * (1rem / var(--clamp-root-font-size))),
    var(--clamp-preffered-value),
    calc(var(--clamp-max) * (1rem / var(--clamp-root-font-size)))
  );
  font-size: var(--clamp);
}

/* body„Å´„Éá„Éï„Ç©„É´„ÉàÂÄ§„ÇíË®≠ÂÆö„Åô„Çã */
body {
  --clamp-viewport-min: 375;
  --clamp-viewport-max: 1200;
  --clamp-min: 14;
  --clamp-max: 16;
}

/* üëç‰Ωø„ÅÑÊñπ */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default padding */
ul,
ol {
  padding: 0;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
ul,
ol,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Set core root defaults */
html {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* Remove list styles on ul, ol elements with a class attribute */
ul,
ol {
  list-style: none;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  -webkit-text-decoration-skip: ink;
          text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img {
  max-width: 100%;
  display: block;
  width: 100%;
}

/* Natural flow and rhythm in articles by default */
article > * + * {
  margin-top: 1em;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Blur images when they have no alt attribute */
img:not([alt]) {
  filter: blur(10px);
}

/* „Éï„Ç©„Éº„É†„É™„Çª„ÉÉ„Éà */
input,
button,
select,
textarea {
  appearance: none;
  background: transparent;
  border: none;
  border-radius: 0;
  font: inherit;
  outline: none;
}

textarea {
  resize: vertical;
}

input[type=checkbox],
input[type=radio] {
  display: none;
}

input[type=submit],
input[type=button],
label,
button,
select {
  cursor: pointer;
}

select::-ms-expand {
  display: none;
}

/* „Éõ„Éê„Éº */
a {
  text-decoration: none;
  color: inherit;
  transition: opacity 0.3s;
}

.global-header {
  display: block;
}

.global-footer {
  display: block;
}

.sample {
  color: red;
}

.inner {
  max-width: 37.5rem;
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}
@media screen and (min-width: 768px) {
  .inner {
    max-width: 1130px;
    padding-right: 25px;
    padding-left: 25px;
  }
}

.u-color--red {
  color: red;
}
@media screen and (min-width: 768px) {
  .u-color--red {
    color: #408F95;
  }
}

body.page-toppage {
  display: block;
}

body.page-about {
  display: block;
  transition: all 0.2s cubic-bezier(0.16, 1, 0.3, 1);
}

body {
  background-color: pink;
}

.bg {
  width: 300px;
  height: 300px;
  background-image: url("../../images/background.png");
  background-size: contain;
}

.image {
  max-width: 400px;
}

.sample {
  display: flex;
  align-items: center;
}